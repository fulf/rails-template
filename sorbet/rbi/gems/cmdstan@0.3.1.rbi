# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `cmdstan` gem.
# Please instead update this file by running `bin/tapioca gem cmdstan`.

# source://cmdstan//lib/cmdstan/utils.rb#1
module CmdStan
  extend ::CmdStan::Utils
  extend ::CmdStan::Install

  class << self
    # Returns the value of attribute path.
    #
    # source://cmdstan//lib/cmdstan.rb#24
    def path; end

    # Sets the attribute path
    #
    # @param value the value to set the attribute path to.
    #
    # source://cmdstan//lib/cmdstan.rb#24
    def path=(_arg0); end
  end
end

# source://cmdstan//lib/cmdstan.rb#19
class CmdStan::Error < ::StandardError; end

# source://cmdstan//lib/cmdstan/install.rb#2
module CmdStan::Install
  include ::CmdStan::Utils

  # @return [Boolean]
  #
  # source://cmdstan//lib/cmdstan/install.rb#9
  def cmdstan_installed?; end

  # source://cmdstan//lib/cmdstan/install.rb#5
  def cmdstan_version; end

  # source://cmdstan//lib/cmdstan/install.rb#14
  def install_cmdstan; end

  private

  # @raise [Error]
  #
  # source://cmdstan//lib/cmdstan/install.rb#73
  def download_file(url, download_path, checksum, redirects = T.unsafe(nil)); end
end

# source://cmdstan//lib/cmdstan/mcmc.rb#2
class CmdStan::MCMC
  include ::CmdStan::Utils

  # private
  # TODO use runset for args
  #
  # @return [MCMC] a new instance of MCMC
  #
  # source://cmdstan//lib/cmdstan/mcmc.rb#9
  def initialize(output_files); end

  # Returns the value of attribute column_names.
  #
  # source://cmdstan//lib/cmdstan/mcmc.rb#5
  def column_names; end

  # Returns the value of attribute draws.
  #
  # source://cmdstan//lib/cmdstan/mcmc.rb#5
  def draws; end

  # source://cmdstan//lib/cmdstan/mcmc.rb#14
  def sample; end

  # source://cmdstan//lib/cmdstan/mcmc.rb#27
  def summary; end

  private

  # source://cmdstan//lib/cmdstan/mcmc.rb#43
  def validate_csv_files; end
end

# source://cmdstan//lib/cmdstan/mle.rb#2
class CmdStan::MLE
  include ::CmdStan::Utils

  # private
  # TODO use runset for args
  #
  # @return [MLE] a new instance of MLE
  #
  # source://cmdstan//lib/cmdstan/mle.rb#7
  def initialize(output_file); end

  # source://cmdstan//lib/cmdstan/mle.rb#18
  def column_names; end

  # source://cmdstan//lib/cmdstan/mle.rb#11
  def optimized_params; end
end

# source://cmdstan//lib/cmdstan/model.rb#2
class CmdStan::Model
  include ::CmdStan::Utils

  # @return [Model] a new instance of Model
  #
  # source://cmdstan//lib/cmdstan/model.rb#7
  def initialize(stan_file: T.unsafe(nil), exe_file: T.unsafe(nil), compile: T.unsafe(nil)); end

  # source://cmdstan//lib/cmdstan/model.rb#30
  def code; end

  # source://cmdstan//lib/cmdstan/model.rb#20
  def compile; end

  # Returns the value of attribute exe_file.
  #
  # source://cmdstan//lib/cmdstan/model.rb#5
  def exe_file; end

  # Returns the value of attribute name.
  #
  # source://cmdstan//lib/cmdstan/model.rb#5
  def name; end

  # source://cmdstan//lib/cmdstan/model.rb#76
  def optimize(data:, seed: T.unsafe(nil), inits: T.unsafe(nil), algorithm: T.unsafe(nil), iter: T.unsafe(nil)); end

  # source://cmdstan//lib/cmdstan/model.rb#34
  def sample(data:, chains: T.unsafe(nil), seed: T.unsafe(nil), inits: T.unsafe(nil), warmup_iters: T.unsafe(nil), sampling_iters: T.unsafe(nil)); end

  # Returns the value of attribute stan_file.
  #
  # source://cmdstan//lib/cmdstan/model.rb#5
  def stan_file; end
end

# source://cmdstan//lib/cmdstan/utils.rb#2
module CmdStan::Utils
  private

  # source://cmdstan//lib/cmdstan/utils.rb#32
  def extension; end

  # @return [Boolean]
  #
  # source://cmdstan//lib/cmdstan/utils.rb#36
  def mac?; end

  # source://cmdstan//lib/cmdstan/utils.rb#28
  def make_command; end

  # source://cmdstan//lib/cmdstan/utils.rb#5
  def run_command(*args); end

  # @return [Boolean]
  #
  # source://cmdstan//lib/cmdstan/utils.rb#40
  def windows?; end
end

# source://cmdstan//lib/cmdstan/version.rb#2
CmdStan::VERSION = T.let(T.unsafe(nil), String)
